// // GENERATED CODE - DO NOT MODIFY BY HAND
// // This code was generated by ObjectBox. To update it run the generator again:
// // With a Flutter package, run `flutter pub run build_runner build`.
// // With a Dart package, run `dart run build_runner build`.
// // See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// // ignore_for_file: camel_case_types, depend_on_referenced_packages
// // coverage:ignore-file

// import 'dart:typed_data';

// import 'package:flat_buffers/flat_buffers.dart' as fb;
// import 'package:objectbox/internal.dart'
//     as obx_int; // generated code can access "internal" functionality
// import 'package:objectbox/objectbox.dart' as obx;
// import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

// import 'models/new_app_validation_model.dart';
// import 'models/user_account_model.dart';

// export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

// final _entities = <obx_int.ModelEntity>[
//   obx_int.ModelEntity(
//       id: const obx_int.IdUid(1, 781959047654909120),
//       name: 'UserAccountModel',
//       lastPropertyId: const obx_int.IdUid(14, 5171295237388573876),
//       flags: 0,
//       properties: <obx_int.ModelProperty>[
//         obx_int.ModelProperty(
//             id: const obx_int.IdUid(1, 5979494071147414743),
//             name: 'id',
//             type: 6,
//             flags: 1),
//         obx_int.ModelProperty(
//             id: const obx_int.IdUid(2, 4470176992413878262),
//             name: 'name',
//             type: 9,
//             flags: 0),
//         obx_int.ModelProperty(
//             id: const obx_int.IdUid(3, 5421156472503305413),
//             name: 'dob',
//             type: 9,
//             flags: 0),
//         obx_int.ModelProperty(
//             id: const obx_int.IdUid(4, 1353554876275704982),
//             name: 'email',
//             type: 9,
//             flags: 0),
//         obx_int.ModelProperty(
//             id: const obx_int.IdUid(5, 7081178428347404850),
//             name: 'city',
//             type: 9,
//             flags: 0),
//         obx_int.ModelProperty(
//             id: const obx_int.IdUid(6, 7402009181918515311),
//             name: 'profileDesc',
//             type: 9,
//             flags: 0),
//         obx_int.ModelProperty(
//             id: const obx_int.IdUid(7, 8339236183765174940),
//             name: 'followers',
//             type: 6,
//             flags: 0),
//         obx_int.ModelProperty(
//             id: const obx_int.IdUid(8, 1153955385703198170),
//             name: 'interests',
//             type: 9,
//             flags: 0),
//         obx_int.ModelProperty(
//             id: const obx_int.IdUid(9, 8419656106544080440),
//             name: 'currentCompany',
//             type: 9,
//             flags: 0),
//         obx_int.ModelProperty(
//             id: const obx_int.IdUid(10, 1336476638726249033),
//             name: 'occupation',
//             type: 9,
//             flags: 0),
//         obx_int.ModelProperty(
//             id: const obx_int.IdUid(11, 8609176921661801172),
//             name: 'photoUrl',
//             type: 9,
//             flags: 0),
//         obx_int.ModelProperty(
//             id: const obx_int.IdUid(13, 1707874249109919598),
//             name: 'deviceToken',
//             type: 9,
//             flags: 0)
//       ],
//       relations: <obx_int.ModelRelation>[],
//       backlinks: <obx_int.ModelBacklink>[]),
//   obx_int.ModelEntity(
//       id: const obx_int.IdUid(2, 1714582446396804106),
//       name: 'NewAppValidationModel',
//       lastPropertyId: const obx_int.IdUid(2, 5830200482924099815),
//       flags: 0,
//       properties: <obx_int.ModelProperty>[
//         obx_int.ModelProperty(
//             id: const obx_int.IdUid(1, 6923936772808446034),
//             name: 'id',
//             type: 6,
//             flags: 1),
//         obx_int.ModelProperty(
//             id: const obx_int.IdUid(2, 5830200482924099815),
//             name: 'isOpened',
//             type: 1,
//             flags: 0)
//       ],
//       relations: <obx_int.ModelRelation>[],
//       backlinks: <obx_int.ModelBacklink>[])
// ];

// /// Shortcut for [Store.new] that passes [getObjectBoxModel] and for Flutter
// /// apps by default a [directory] using `defaultStoreDirectory()` from the
// /// ObjectBox Flutter library.
// ///
// /// Note: for desktop apps it is recommended to specify a unique [directory].
// ///
// /// See [Store.new] for an explanation of all parameters.
// ///
// /// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
// /// the ObjectBox Flutter library to fix loading the native ObjectBox library
// /// on Android 6 and older.
// Future<obx.Store> openStore(
//     {String? directory,
//     int? maxDBSizeInKB,
//     int? maxDataSizeInKB,
//     int? fileMode,
//     int? maxReaders,
//     bool queriesCaseSensitiveDefault = true,
//     String? macosApplicationGroup}) async {
//   await loadObjectBoxLibraryAndroidCompat();
//   return obx.Store(getObjectBoxModel(),
//       directory: directory ?? (await defaultStoreDirectory()).path,
//       maxDBSizeInKB: maxDBSizeInKB,
//       maxDataSizeInKB: maxDataSizeInKB,
//       fileMode: fileMode,
//       maxReaders: maxReaders,
//       queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
//       macosApplicationGroup: macosApplicationGroup);
// }

// /// Returns the ObjectBox model definition for this project for use with
// /// [Store.new].
// obx_int.ModelDefinition getObjectBoxModel() {
//   final model = obx_int.ModelInfo(
//       entities: _entities,
//       lastEntityId: const obx_int.IdUid(2, 1714582446396804106),
//       lastIndexId: const obx_int.IdUid(0, 0),
//       lastRelationId: const obx_int.IdUid(0, 0),
//       lastSequenceId: const obx_int.IdUid(0, 0),
//       retiredEntityUids: const [],
//       retiredIndexUids: const [],
//       retiredPropertyUids: const [746361275310292269, 5171295237388573876],
//       retiredRelationUids: const [],
//       modelVersion: 5,
//       modelVersionParserMinimum: 5,
//       version: 1);

//   final bindings = <Type, obx_int.EntityDefinition>{
//     UserAccountModel: obx_int.EntityDefinition<UserAccountModel>(
//         model: _entities[0],
//         toOneRelations: (UserAccountModel object) => [],
//         toManyRelations: (UserAccountModel object) => {},
//         getId: (UserAccountModel object) => object.id,
//         setId: (UserAccountModel object, int id) {
//           object.id = id;
//         },
//         objectToFB: (UserAccountModel object, fb.Builder fbb) {
//           final nameOffset =
//               object.name == null ? null : fbb.writeString(object.name!);
//           final dobOffset =
//               object.dob == null ? null : fbb.writeString(object.dob!);
//           final emailOffset =
//               object.email == null ? null : fbb.writeString(object.email!);
//           final cityOffset =
//               object.city == null ? null : fbb.writeString(object.city!);
//           final profileDescOffset = object.profileDesc == null
//               ? null
//               : fbb.writeString(object.profileDesc!);
//           final interestsOffset = object.interests == null
//               ? null
//               : fbb.writeString(object.interests!);
//           final currentCompanyOffset = object.currentCompany == null
//               ? null
//               : fbb.writeString(object.currentCompany!);
//           final occupationOffset = object.occupation == null
//               ? null
//               : fbb.writeString(object.occupation!);
//           final photoUrlOffset = object.photoUrl == null
//               ? null
//               : fbb.writeString(object.photoUrl!);
//           final deviceTokenOffset = object.deviceToken == null
//               ? null
//               : fbb.writeString(object.deviceToken!);
//           fbb.startTable(15);
//           fbb.addInt64(0, object.id);
//           fbb.addOffset(1, nameOffset);
//           fbb.addOffset(2, dobOffset);
//           fbb.addOffset(3, emailOffset);
//           fbb.addOffset(4, cityOffset);
//           fbb.addOffset(5, profileDescOffset);
//           fbb.addInt64(6, object.followers);
//           fbb.addOffset(7, interestsOffset);
//           fbb.addOffset(8, currentCompanyOffset);
//           fbb.addOffset(9, occupationOffset);
//           fbb.addOffset(10, photoUrlOffset);
//           fbb.addOffset(12, deviceTokenOffset);
//           fbb.finish(fbb.endTable());
//           return object.id;
//         },
//         objectFromFB: (obx.Store store, ByteData fbData) {
//           final buffer = fb.BufferContext(fbData);
//           final rootOffset = buffer.derefObject(0);
//           final idParam =
//               const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
//           final nameParam = const fb.StringReader(asciiOptimization: true)
//               .vTableGetNullable(buffer, rootOffset, 6);
//           final dobParam = const fb.StringReader(asciiOptimization: true)
//               .vTableGetNullable(buffer, rootOffset, 8);
//           final emailParam = const fb.StringReader(asciiOptimization: true)
//               .vTableGetNullable(buffer, rootOffset, 10);
//           final cityParam = const fb.StringReader(asciiOptimization: true)
//               .vTableGetNullable(buffer, rootOffset, 12);
//           final profileDescParam =
//               const fb.StringReader(asciiOptimization: true)
//                   .vTableGetNullable(buffer, rootOffset, 14);
//           final followersParam =
//               const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 16);
//           final interestsParam = const fb.StringReader(asciiOptimization: true)
//               .vTableGetNullable(buffer, rootOffset, 18);
//           final currentCompanyParam =
//               const fb.StringReader(asciiOptimization: true)
//                   .vTableGetNullable(buffer, rootOffset, 20);
//           final occupationParam = const fb.StringReader(asciiOptimization: true)
//               .vTableGetNullable(buffer, rootOffset, 22);
//           final photoUrlParam = const fb.StringReader(asciiOptimization: true)
//               .vTableGetNullable(buffer, rootOffset, 24);
//           final deviceTokenParam =
//               const fb.StringReader(asciiOptimization: true)
//                   .vTableGetNullable(buffer, rootOffset, 28);
//           final object = UserAccountModel(
//               id: idParam,
//               name: nameParam,
//               dob: dobParam,
//               email: emailParam,
//               city: cityParam,
//               profileDesc: profileDescParam,
//               followers: followersParam,
//               interests: interestsParam,
//               currentCompany: currentCompanyParam,
//               occupation: occupationParam,
//               photoUrl: photoUrlParam,
//               deviceToken: deviceTokenParam);

//           return object;
//         }),
//     NewAppValidationModel: obx_int.EntityDefinition<NewAppValidationModel>(
//         model: _entities[1],
//         toOneRelations: (NewAppValidationModel object) => [],
//         toManyRelations: (NewAppValidationModel object) => {},
//         getId: (NewAppValidationModel object) => object.id,
//         setId: (NewAppValidationModel object, int id) {
//           object.id = id;
//         },
//         objectToFB: (NewAppValidationModel object, fb.Builder fbb) {
//           fbb.startTable(3);
//           fbb.addInt64(0, object.id);
//           fbb.addBool(1, object.isOpened);
//           fbb.finish(fbb.endTable());
//           return object.id;
//         },
//         objectFromFB: (obx.Store store, ByteData fbData) {
//           final buffer = fb.BufferContext(fbData);
//           final rootOffset = buffer.derefObject(0);
//           final idParam =
//               const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
//           final isOpenedParam =
//               const fb.BoolReader().vTableGetNullable(buffer, rootOffset, 6);
//           final object =
//               NewAppValidationModel(id: idParam, isOpened: isOpenedParam);

//           return object;
//         })
//   };

//   return obx_int.ModelDefinition(model, bindings);
// }

// /// [UserAccountModel] entity fields to define ObjectBox queries.
// class UserAccountModel_ {
//   /// see [UserAccountModel.id]
//   static final id =
//       obx.QueryIntegerProperty<UserAccountModel>(_entities[0].properties[0]);

//   /// see [UserAccountModel.name]
//   static final name =
//       obx.QueryStringProperty<UserAccountModel>(_entities[0].properties[1]);

//   /// see [UserAccountModel.dob]
//   static final dob =
//       obx.QueryStringProperty<UserAccountModel>(_entities[0].properties[2]);

//   /// see [UserAccountModel.email]
//   static final email =
//       obx.QueryStringProperty<UserAccountModel>(_entities[0].properties[3]);

//   /// see [UserAccountModel.city]
//   static final city =
//       obx.QueryStringProperty<UserAccountModel>(_entities[0].properties[4]);

//   /// see [UserAccountModel.profileDesc]
//   static final profileDesc =
//       obx.QueryStringProperty<UserAccountModel>(_entities[0].properties[5]);

//   /// see [UserAccountModel.followers]
//   static final followers =
//       obx.QueryIntegerProperty<UserAccountModel>(_entities[0].properties[6]);

//   /// see [UserAccountModel.interests]
//   static final interests =
//       obx.QueryStringProperty<UserAccountModel>(_entities[0].properties[7]);

//   /// see [UserAccountModel.currentCompany]
//   static final currentCompany =
//       obx.QueryStringProperty<UserAccountModel>(_entities[0].properties[8]);

//   /// see [UserAccountModel.occupation]
//   static final occupation =
//       obx.QueryStringProperty<UserAccountModel>(_entities[0].properties[9]);

//   /// see [UserAccountModel.photoUrl]
//   static final photoUrl =
//       obx.QueryStringProperty<UserAccountModel>(_entities[0].properties[10]);

//   /// see [UserAccountModel.deviceToken]
//   static final deviceToken =
//       obx.QueryStringProperty<UserAccountModel>(_entities[0].properties[11]);
// }

// /// [NewAppValidationModel] entity fields to define ObjectBox queries.
// class NewAppValidationModel_ {
//   /// see [NewAppValidationModel.id]
//   static final id = obx.QueryIntegerProperty<NewAppValidationModel>(
//       _entities[1].properties[0]);

//   /// see [NewAppValidationModel.isOpened]
//   static final isOpened = obx.QueryBooleanProperty<NewAppValidationModel>(
//       _entities[1].properties[1]);
// }
